trigger:
  branches:
    include:
    - main
  paths:
    include:
    - src/*
    - azure-pipelines.yml
    - .gitignore

pr:
  autoCancel: true
  branches:
    include:
    - 'master'
  paths:
    include:
    - src/*
    - azure-pipelines.yml
    - .gitignore

jobs:
- job: BlazorApp
  displayName: Blazor App
  timeoutInMinutes: 15
  workspace:
    clean: all
  strategy:
      maxParallel: 1
  pool:
      vmImage: ubuntu-16.04
  variables:
    buildConfiguration: 'Release'
    restoreBuildProjects: '**/*.csproj'
    testProjects: '**/*Test.csproj'
    publishProject: '**/JsonValidate.csproj'
    dotnetSDK: "5.0.x"
  steps:
  - checkout: self
    clean: true
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: $(dotnetSDK)
      installationPath: $(Agent.ToolsDirectory)/dotnet
      includePreviewVersions: true
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(restoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: $(restoreBuildProjects)
      arguments: --configuration $(buildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: $(testProjects)
      arguments: --configuration $(buildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      projects: $(publishProject)
      arguments: --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
      publishWebProjects: true
      zipAfterPublish: false
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  - task: PublishBuildArtifacts@1
    displayName: Artifacts
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
